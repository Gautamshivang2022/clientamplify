{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHIVAM CHAUBEY\\\\OneDrive\\\\Desktop\\\\videovcr\\\\videovcr\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport socket from '../../socket';\nimport emoji from '../../assets/emoji.png';\nimport file from '../../assets/paperclip-icon.png';\nimport send from '../../assets/send.png';\nimport Emoji from './Emoji';\n\nconst Chat = _ref => {\n  let {\n    display,\n    roomId\n  } = _ref;\n  const currentUser = sessionStorage.getItem('user');\n  const [msg, setMsg] = useState([]);\n  const messagesEndRef = useRef(null);\n  const [displayEmoji, setDisplayEmoji] = useState(false);\n  const inputRef = useRef();\n  const [file, setImage] = useState(null);\n\n  const clickEmoji = () => {\n    if (!displayEmoji) {\n      setDisplayEmoji(true);\n    } else {\n      setDisplayEmoji(false);\n    }\n  };\n\n  useEffect(() => {\n    socket.on('FE-receive-message', _ref2 => {\n      let {\n        msg,\n        sender\n      } = _ref2;\n      setMsg(msgs => [...msgs, {\n        sender,\n        msg\n      }]);\n    });\n  }, []); // Scroll to Bottom of Message List\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [msg]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  const sendMessage = e => {\n    if (e.key === 'Enter' || e.key === 'Shift') {\n      const msg = e.target.value;\n\n      if (msg) {\n        socket.emit('BE-send-message', {\n          roomId,\n          msg,\n          sender: currentUser\n        });\n        inputRef.current.value = '';\n      }\n    }\n  };\n\n  const sendM = e => {\n    const msg = e.target.value;\n\n    if (msg) {\n      socket.emit('BE-send-message', {\n        roomId,\n        msg,\n        sender: currentUser\n      });\n      inputRef.current.value = '';\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ChatContainer, {\n    className: display ? '' : 'width0',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TopHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Group Chat Room\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"button-send\",\n    class: \"msg_send_btn\",\n    onClick: sendMessage,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickEmoji,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Emoji\"), /*#__PURE__*/React.createElement(ChatArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MessageList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, msg && msg.map((_ref3, idx) => {\n    let {\n      sender,\n      msg\n    } = _ref3;\n\n    if (sender !== currentUser) {\n      return /*#__PURE__*/React.createElement(Message, {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, sender), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, msg));\n    } else {\n      return /*#__PURE__*/React.createElement(UserMessage, {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, sender), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, msg));\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: 'left',\n      clear: 'both'\n    },\n    ref: messagesEndRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), displayEmoji ? /*#__PURE__*/React.createElement(Emoji, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }) : null, console.log(localStorage.getItem('Emoji'))), /*#__PURE__*/React.createElement(\"form\", {\n    class: \"form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input-group mb-2 mr-sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"input-group-text text-dark\",\n    style: {\n      width: '45px',\n      height: '45px'\n    },\n    src: emoji,\n    alt: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"inlineFormInputGroupUsername2\",\n    placeholder: \"Enter your message\",\n    onKeyUp: sendMessage,\n    ref: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"input-group-text\",\n    style: {\n      width: '45px',\n      height: '45px'\n    },\n    src: file,\n    alt: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    style: {\n      display: 'none'\n    },\n    id: \"hidden-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"input-group-text\",\n    style: {\n      width: '45px',\n      height: '45px'\n    },\n    src: send,\n    alt: '',\n    value: \"send\",\n    onClick: sendM,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst ChatContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 2%; \n  margin-top: 10%;\n  margin-bottom: 0%;\n  width: 25%;\n  height: 500px;\n  background-color: white;\n  // transition: all 0.5s ease;\n  overflow: hidden;\n  position:fixed;\n  right:0;\n  border-radius:2%;\n`;\nconst TopHeader = styled.div`\n  width: 100%;\n  padding:10px;\n  // margin-top: 3%;\n  font-weight: 600;\n  font-size: 20px;\n  color: white;\n  background:#22b1ed;\n`;\nconst ChatArea = styled.div`\n  width: 100%;\n  height: 83%;\n  max-height: 83%;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\nconst MessageList = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  padding: 15px;\n  color: #454552;\n`;\nconst Message = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  font-size: 16px;\n  margin-top: 15px;\n  margin-left: 15px;\n  text-align: left;\n\n  > strong {\n    margin-left: 0px;\n  }\n\n  > p {\n    max-width: 65%;\n    margin-left: -5px;\n    width: auto;\n    padding: 9px;\n    margin-top: 3px;\n    border: 1px solid rgb(78, 161, 211, 0.3);\n    border-radius: 15px;\n    box-shadow: 0px 0px 3px #4ea1d3;\n    text-align :right;\n    font-size: 14px;\n  }\n`;\nconst UserMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  width: 100%;\n  font-size: 16px;\n  margin-top: 15px;\n  text-align: right;\n  margin-right: 0%;\n\n  > strong {\n    margin-right: 0px;\n  }\n\n  > p {\n    max-width: 65%;\n    width: auto;\n    padding: 9px;\n    margin-top: 3px;\n    margin-right: 0px;\n    border: 1px solid rgb(78, 161, 211, 0.3);\n    border-radius: 15px;\n    background-color: #22b1ed;\n    color: white;\n    font-size: 14px;\n    text-align: left;\n  }\n`; // const BottomInput = styled.input`\n//   bottom: 0;\n//   width: 100%;\n//   height: 8%;\n//   padding: 15px;\n//   border-top: 1px solid rgb(69, 69, 82, 0.25);\n//   box-sizing: border-box;\n//   opacity: 0.7;\n//   :focus {\n//     outline: none;\n//   }\n// `;\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/SHIVAM CHAUBEY/OneDrive/Desktop/videovcr/videovcr/client/src/components/Chat/Chat.js"],"names":["React","useEffect","useState","useRef","styled","socket","emoji","file","send","Emoji","Chat","display","roomId","currentUser","sessionStorage","getItem","msg","setMsg","messagesEndRef","displayEmoji","setDisplayEmoji","inputRef","setImage","clickEmoji","on","sender","msgs","scrollToBottom","current","scrollIntoView","behavior","sendMessage","e","key","target","value","emit","sendM","map","idx","float","clear","console","log","localStorage","width","height","ChatContainer","div","TopHeader","ChatArea","MessageList","Message","UserMessage"],"mappings":"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,CAAC4C,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;AAgBA,MAAMC,SAAS,GAAG7C,MAAM,CAAC4C,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAME,QAAQ,GAAG9C,MAAM,CAAC4C,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMG,WAAW,GAAG/C,MAAM,CAAC4C,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMI,OAAO,GAAGhD,MAAM,CAAC4C,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BA;AA4BA,MAAMK,WAAW,GAAGjD,MAAM,CAAC4C,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BA,C,CA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAGA,eAAetC,IAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport socket from '../../socket';\r\nimport emoji from '../../assets/emoji.png';\r\nimport file from '../../assets/paperclip-icon.png';\r\nimport send from '../../assets/send.png';\r\nimport Emoji from './Emoji';\r\nconst Chat = ({ display, roomId }) => {\r\n  const currentUser = sessionStorage.getItem('user');\r\n  const [msg, setMsg] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n  const [displayEmoji, setDisplayEmoji] = useState(false);\r\n  const inputRef = useRef();\r\n  const [file,setImage] = useState(null);\r\n\r\n\r\n  \r\n\r\n  const clickEmoji = () => {\r\n    if (!displayEmoji) {\r\n      setDisplayEmoji(true);\r\n    } else {\r\n      setDisplayEmoji(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket.on('FE-receive-message', ({ msg, sender }) => {\r\n      setMsg((msgs) => [...msgs, { sender, msg }]);\r\n    });\r\n  }, []);\r\n\r\n  // Scroll to Bottom of Message List\r\n  useEffect(() => { scrollToBottom() }, [msg])\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n\r\n  const sendMessage = (e) => {\r\n    if (e.key === 'Enter' || e.key === 'Shift') {\r\n      const msg = e.target.value;\r\n      if (msg) {\r\n        socket.emit('BE-send-message', { roomId, msg, sender: currentUser });\r\n        inputRef.current.value = '';\r\n      }\r\n    }\r\n  };\r\n  const sendM = (e) => {\r\n    const msg = e.target.value;\r\n    if (msg) {\r\n      socket.emit('BE-send-message', { roomId, msg, sender: currentUser });\r\n      inputRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChatContainer className={display ? '' : 'width0'}>\r\n      <TopHeader>Group Chat Room</TopHeader>\r\n      {/* <button  onClick={sendM}>Send</button> */}\r\n      <button id=\"button-send\" class=\"msg_send_btn\" onClick={sendMessage} type=\"button\">submit</button>\r\n      <button onClick={clickEmoji}>Emoji</button>\r\n      <ChatArea>\r\n        <MessageList>\r\n          {msg &&\r\n            msg.map(({ sender, msg }, idx) => {\r\n              if (sender !== currentUser) {\r\n                return (\r\n                  <Message key={idx}>\r\n                    <strong>{sender}</strong>\r\n                    <p>{msg}</p>\r\n                  </Message>\r\n                );\r\n              } else {\r\n                return (\r\n                  <UserMessage key={idx}>\r\n                    <strong>{sender}</strong>\r\n                    <p>{msg}</p>\r\n                  </UserMessage>\r\n                );\r\n              }\r\n            })}\r\n          <div style={{ float: 'left', clear: 'both' }} ref={messagesEndRef} />\r\n        </MessageList>\r\n        {displayEmoji ? <Emoji /> : null}\r\n        {console.log(localStorage.getItem('Emoji'))}\r\n        {/* <Emoji display={displayEmoji} /> */}\r\n      </ChatArea>\r\n      {/* <BottomInput\r\n            ref={inputRef}\r\n            onKeyUp={sendMessage}\r\n            placeholder=\"Enter your message\"\r\n          /> */}\r\n      <form class=\"form-inline\">\r\n        <div class=\"input-group mb-2 mr-sm-2\">\r\n          <div class=\"input-group-prepend\">\r\n            <img className='input-group-text text-dark' style={{ width: '45px', height: '45px' }} src={emoji} alt={''}></img>\r\n          </div>\r\n          <input type=\"text\" class=\"form-control\" id=\"inlineFormInputGroupUsername2\" placeholder=\"Enter your message\" onKeyUp={sendMessage} ref={inputRef}></input>\r\n          <div class=\"input-group-prepend\">\r\n            <img className='input-group-text' style={{ width: '45px', height: '45px' }} src={file} alt={''}></img>\r\n          </div>\r\n          <div class=\"input-group-prepend\">\r\n            <button type='button' style={{ display: 'none' }} id='hidden-file' />\r\n            <img className='input-group-text' style={{ width: '45px', height: '45px' }} src={send} alt={''} value=\"send\" onClick={sendM}></img>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </ChatContainer>\r\n  );\r\n};\r\n\r\nconst ChatContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-right: 2%; \r\n  margin-top: 10%;\r\n  margin-bottom: 0%;\r\n  width: 25%;\r\n  height: 500px;\r\n  background-color: white;\r\n  // transition: all 0.5s ease;\r\n  overflow: hidden;\r\n  position:fixed;\r\n  right:0;\r\n  border-radius:2%;\r\n`;\r\n\r\nconst TopHeader = styled.div`\r\n  width: 100%;\r\n  padding:10px;\r\n  // margin-top: 3%;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  color: white;\r\n  background:#22b1ed;\r\n`;\r\n\r\nconst ChatArea = styled.div`\r\n  width: 100%;\r\n  height: 83%;\r\n  max-height: 83%;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst MessageList = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  padding: 15px;\r\n  color: #454552;\r\n`;\r\n\r\nconst Message = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  font-size: 16px;\r\n  margin-top: 15px;\r\n  margin-left: 15px;\r\n  text-align: left;\r\n\r\n  > strong {\r\n    margin-left: 0px;\r\n  }\r\n\r\n  > p {\r\n    max-width: 65%;\r\n    margin-left: -5px;\r\n    width: auto;\r\n    padding: 9px;\r\n    margin-top: 3px;\r\n    border: 1px solid rgb(78, 161, 211, 0.3);\r\n    border-radius: 15px;\r\n    box-shadow: 0px 0px 3px #4ea1d3;\r\n    text-align :right;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst UserMessage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  width: 100%;\r\n  font-size: 16px;\r\n  margin-top: 15px;\r\n  text-align: right;\r\n  margin-right: 0%;\r\n\r\n  > strong {\r\n    margin-right: 0px;\r\n  }\r\n\r\n  > p {\r\n    max-width: 65%;\r\n    width: auto;\r\n    padding: 9px;\r\n    margin-top: 3px;\r\n    margin-right: 0px;\r\n    border: 1px solid rgb(78, 161, 211, 0.3);\r\n    border-radius: 15px;\r\n    background-color: #22b1ed;\r\n    color: white;\r\n    font-size: 14px;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\n// const BottomInput = styled.input`\r\n//   bottom: 0;\r\n//   width: 100%;\r\n//   height: 8%;\r\n//   padding: 15px;\r\n//   border-top: 1px solid rgb(69, 69, 82, 0.25);\r\n//   box-sizing: border-box;\r\n//   opacity: 0.7;\r\n\r\n//   :focus {\r\n//     outline: none;\r\n//   }\r\n// `;\r\n\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}