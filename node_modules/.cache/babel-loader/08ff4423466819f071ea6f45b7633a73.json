{"ast":null,"code":"// import React, { useEffect, useState, useRef } from 'react';\n// import styled from 'styled-components';\n// import socket from '../../socket';\n// import emoji from '../../assets/emoji.png';\n// import file from '../../assets/paperclip-icon.png';\n// import send from '../../assets/send.png';\n// import Emoji from './Emoji';\n// const Chat = ({ display, roomId }) => {\n//   const currentUser = sessionStorage.getItem('user');\n//   const [msg, setMsg] = useState([]);\n//   const messagesEndRef = useRef(null);\n//   const [displayEmoji, setDisplayEmoji] = useState(false);\n//   const inputRef = useRef();\n//   // const clickEmoji = () => {\n//   //   if (!displayEmoji) {\n//   //     setDisplayEmoji(true);\n//   //   } else {\n//   //     setDisplayEmoji(false);\n//   //   }\n//   // }\n//   useEffect(() => {\n//     socket.on('FE-receive-message', ({ msg, sender }) => {\n//       setMsg((msgs) => [...msgs, { sender, msg }]);\n//     });\n//   }, []);\n//   // Scroll to Bottom of Message List\n//   useEffect(() => { scrollToBottom() }, [msg])\n//   const scrollToBottom = () => {\n//     messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n//   }\n//   const sendMessage = (e) => {\n//     if (e.key === 'Enter' || e.key === 'Shift') {\n//       const msg = e.target.value;\n//       if (msg) {\n//         socket.emit('BE-send-message', { roomId, msg, sender: currentUser });\n//         inputRef.current.value = '';\n//       }\n//     }\n//   };\n//   const sendM = (e) => {\n//     const msg = e.target.value;\n//     if (msg) {\n//       socket.emit('BE-send-message', { roomId, msg, sender: currentUser });\n//       inputRef.current.value = '';\n//     }\n//   };\n//   return (\n//     <ChatContainer className={display ? '' : 'width0'}>\n//       <TopHeader>Group Chat Room</TopHeader>\n//       {/* <button  onClick={sendM}>Send</button> */}\n//       {/* <button onClick={clickEmoji}>Emoji</button> */}\n//       <ChatArea>\n//         <MessageList>\n//           {msg &&\n//             msg.map(({ sender, msg }, idx) => {\n//               if (sender !== currentUser) {\n//                 return (\n//                   <Message key={idx}>\n//                     <strong>{sender}</strong>\n//                     <p>{msg}</p>\n//                   </Message>\n//                 );\n//               } else {\n//                 return (\n//                   <UserMessage key={idx}>\n//                     <strong>{sender}</strong>\n//                     <p>{msg}</p>\n//                   </UserMessage>\n//                 );\n//               }\n//             })}\n//           <div style={{ float: 'left', clear: 'both' }} ref={messagesEndRef} />\n//         </MessageList>\n//         {/* {displayEmoji ? <Emoji /> : null}\n//         {console.log(localStorage.getItem('Emoji'))} */}\n//         {/* <Emoji display={displayEmoji} /> */}\n//       </ChatArea>\n//       {/* <BottomInput\n//             ref={inputRef}\n//             onKeyUp={sendMessage}\n//             placeholder=\"Enter your message\"\n//           /> */}\n//       <form class=\"form-inline\">\n//         <div class=\"input-group mb-2 mr-sm-2\">\n//           <div class=\"input-group-prepend\">\n//             <img className='input-group-text text-dark' style={{ width: '45px', height: '45px' }} src={emoji} alt={''}></img>\n//           </div>\n//           <input type=\"text\" class=\"form-control\" id=\"inlineFormInputGroupUsername2\" placeholder=\"Enter your message\" onKeyUp={sendMessage} ref={inputRef}></input>\n//           <div class=\"input-group-prepend\">\n//             <img className='input-group-text' style={{ width: '45px', height: '45px' }} src={file} alt={''}></img>\n//           </div>\n//           <div class=\"input-group-prepend\">\n//             <input type='file' onKeyUp={sendMessage} ref={inputRef} />\n//           </div>\n//         </div>\n//       </form>\n//     </ChatContainer>\n//   );\n// };\n// const ChatContainer = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   margin-right: 2%; \n//   margin-top: 10%;\n//   margin-bottom: 0%;\n//   width: 25%;\n//   height: 500px;\n//   background-color: white;\n//   // transition: all 0.5s ease;\n//   overflow: hidden;\n//   position:fixed;\n//   right:0;\n//   border-radius:2%;\n// `;\n// const TopHeader = styled.div`\n//   width: 100%;\n//   padding:10px;\n//   // margin-top: 3%;\n//   font-weight: 600;\n//   font-size: 20px;\n//   color: white;\n//   background:#22b1ed;\n// `;\n// const ChatArea = styled.div`\n//   width: 100%;\n//   height: 83%;\n//   max-height: 83%;\n//   overflow-x: hidden;\n//   overflow-y: auto;\n// `;\n// const MessageList = styled.div`\n//   display: flex;\n//   width: 100%;\n//   flex-direction: column;\n//   padding: 15px;\n//   color: #454552;\n// `;\n// const Message = styled.div`\n//   width: 100%;\n//   display: flex;\n//   flex-direction: column;\n//   align-items: flex-start;\n//   font-size: 16px;\n//   margin-top: 15px;\n//   margin-left: 15px;\n//   text-align: left;\n//   > strong {\n//     margin-left: 0px;\n//   }\n//   > p {\n//     max-width: 65%;\n//     margin-left: -5px;\n//     width: auto;\n//     padding: 9px;\n//     margin-top: 3px;\n//     border: 1px solid rgb(78, 161, 211, 0.3);\n//     border-radius: 15px;\n//     box-shadow: 0px 0px 3px #4ea1d3;\n//     text-align :right;\n//     font-size: 14px;\n//   }\n// `;\n// const UserMessage = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: flex-end;\n//   width: 100%;\n//   font-size: 16px;\n//   margin-top: 15px;\n//   text-align: right;\n//   margin-right: 0%;\n//   > strong {\n//     margin-right: 0px;\n//   }\n//   > p {\n//     max-width: 65%;\n//     width: auto;\n//     padding: 9px;\n//     margin-top: 3px;\n//     margin-right: 0px;\n//     border: 1px solid rgb(78, 161, 211, 0.3);\n//     border-radius: 15px;\n//     background-color: #22b1ed;\n//     color: white;\n//     font-size: 14px;\n//     text-align: left;\n//   }\n// `;\n// // const BottomInput = styled.input`\n// //   bottom: 0;\n// //   width: 100%;\n// //   height: 8%;\n// //   padding: 15px;\n// //   border-top: 1px solid rgb(69, 69, 82, 0.25);\n// //   box-sizing: border-box;\n// //   opacity: 0.7;\n// //   :focus {\n// //     outline: none;\n// //   }\n// // `;\n// export default Chat;\n// import React, { useEffect, useState, useRef } from 'react';\n// import styled from 'styled-components';\n// import socket from '../../socket';\n// const Chat = ({ display, roomId }) => {\n//   const currentUser = sessionStorage.getItem('user');\n//   const [msg, setMsg] = useState([]);\n//   const messagesEndRef = useRef(null);\n//   const inputRef = useRef();\n//   useEffect(() => {\n//     socket.on('FE-receive-message', ({ msg, sender }) => {\n//       setMsg((msgs) => [...msgs, { sender, msg }]);\n//     });\n//   }, []);\n//   useEffect(() => {scrollToBottom()}, [msg])\n//   const scrollToBottom = () => {\n//     messagesEndRef.current.scrollIntoView({ behavior: 'smooth'});\n//   }\n//   const sendMessage = (e) => {\n//     if (e.key === 'Enter') {\n//       const msg = e.target.value;\n//       if (msg) {\n//         socket.emit('BE-send-message', { roomId, msg, sender: currentUser });\n//         inputRef.current.value = '';\n//       }\n//     }\n//   };\n//   return (\n//     <ChatContainer className={display ? '' : 'width0'}>\n//       <TopHeader>Group Chat Room</TopHeader>\n//       <ChatArea>\n//         <MessageList>\n//           {msg &&\n//             msg.map(({ sender, msg }, idx) => {\n//               if (sender !== currentUser) {\n//                 return (\n//                   <Message key={idx}>\n//                     <strong>{sender}</strong>\n//                     <p>{msg}</p>\n//                   </Message>\n//                 );\n//               } else {\n//                 return (\n//                   <UserMessage key={idx}>\n//                     <strong>{sender}</strong>\n//                     <p>{msg}</p>\n//                   </UserMessage>\n//                 );\n//               }\n//             })}\n//             <div style={{float:'left', clear: 'both'}} ref={messagesEndRef} />\n//         </MessageList>\n//       </ChatArea>\n//       <BottomInput\n//         ref={inputRef}\n//         onKeyUp={sendMessage}\n//         placeholder=\"Enter your message\"\n//       />\n//     </ChatContainer>\n//   );\n// };\n// const ChatContainer = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   width: 25%;\n//   hieght: 100%;\n//   background-color: white;\n//   transition: all 0.5s ease;\n//   overflow: hidden;\n// `;\n// const TopHeader = styled.div`\n//   width: 100%;\n//   margin-top: 15px;\n//   font-weight: 600;\n//   font-size: 20px;\n//   color: black;\n// `;\n// const ChatArea = styled.div`\n//   width: 100%;\n//   height: 83%;\n//   max-height: 83%;\n//   overflow-x: hidden;\n//   overflow-y: auto;\n// `;\n// const MessageList = styled.div`\n//   display: flex;\n//   width: 100%;\n//   flex-direction: column;\n//   padding: 15px;\n//   color: #454552;\n// `;\n// const Message = styled.div`\n//   width: 100%;\n//   display: flex;\n//   flex-direction: column;\n//   align-items: flex-start;\n//   font-size: 16px;\n//   margin-top: 15px;\n//   margin-left: 15px;\n//   text-align: left;\n//   > strong {\n//     margin-left: 3px;\n//   }\n//   > p {\n//     max-width: 65%;\n//     width: auto;\n//     padding: 9px;\n//     margin-top: 3px;\n//     border: 1px solid rgb(78, 161, 211, 0.3);\n//     border-radius: 15px;\n//     box-shadow: 0px 0px 3px #4ea1d3;\n//     font-size: 14px;\n//   }\n// `;\n// const UserMessage = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: flex-end;\n//   width: 100%;\n//   font-size: 16px;\n//   margin-top: 15px;\n//   text-align: right;\n//   > strong {\n//     margin-right: 35px;\n//   }\n//   > p {\n//     max-width: 65%;\n//     width: auto;\n//     padding: 9px;\n//     margin-top: 3px;\n//     margin-right: 30px;\n//     border: 1px solid rgb(78, 161, 211, 0.3);\n//     border-radius: 15px;\n//     background-color: #4ea1d3;\n//     color: white;\n//     font-size: 14px;\n//     text-align: left;\n//   }\n// `;\n// const BottomInput = styled.input`\n//   bottom: 0;\n//   width: 100%;\n//   height: 8%;\n//   padding: 15px;\n//   border-top: 1px solid rgb(69, 69, 82, 0.25);\n//   box-sizing: border-box;\n//   opacity: 0.7;\n//   :focus {\n//     outline: none;\n//   }\n// `;\n// export default Chat;","map":{"version":3,"sources":["C:/Users/SHIVAM CHAUBEY/OneDrive/Desktop/videovcr/videovcr/client/src/components/Chat/Chat.js"],"names":[],"mappingssourcesContent":["// import React, { useEffect, useState, useRef } from 'react';\r\n// import styled from 'styled-components';\r\n// import socket from '../../socket';\r\n// import emoji from '../../assets/emoji.png';\r\n// import file from '../../assets/paperclip-icon.png';\r\n// import send from '../../assets/send.png';\r\n// import Emoji from './Emoji';\r\n// const Chat = ({ display, roomId }) => {\r\n//   const currentUser = sessionStorage.getItem('user');\r\n//   const [msg, setMsg] = useState([]);\r\n//   const messagesEndRef = useRef(null);\r\n//   const [displayEmoji, setDisplayEmoji] = useState(false);\r\n//   const inputRef = useRef();\r\n\r\n//   // const clickEmoji = () => {\r\n//   //   if (!displayEmoji) {\r\n//   //     setDisplayEmoji(true);\r\n//   //   } else {\r\n//   //     setDisplayEmoji(false);\r\n//   //   }\r\n//   // }\r\n\r\n//   useEffect(() => {\r\n//     socket.on('FE-receive-message', ({ msg, sender }) => {\r\n//       setMsg((msgs) => [...msgs, { sender, msg }]);\r\n//     });\r\n//   }, []);\r\n\r\n//   // Scroll to Bottom of Message List\r\n//   useEffect(() => { scrollToBottom() }, [msg])\r\n\r\n//   const scrollToBottom = () => {\r\n//     messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n//   }\r\n\r\n//   const sendMessage = (e) => {\r\n//     if (e.key === 'Enter' || e.key === 'Shift') {\r\n//       const msg = e.target.value;\r\n//       if (msg) {\r\n//         socket.emit('BE-send-message', { roomId, msg, sender: currentUser });\r\n//         inputRef.current.value = '';\r\n//       }\r\n//     }\r\n//   };\r\n//   const sendM = (e) => {\r\n//     const msg = e.target.value;\r\n//     if (msg) {\r\n//       socket.emit('BE-send-message', { roomId, msg, sender: currentUser });\r\n//       inputRef.current.value = '';\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <ChatContainer className={display ? '' : 'width0'}>\r\n//       <TopHeader>Group Chat Room</TopHeader>\r\n//       {/* <button  onClick={sendM}>Send</button> */}\r\n//       {/* <button onClick={clickEmoji}>Emoji</button> */}\r\n//       <ChatArea>\r\n//         <MessageList>\r\n//           {msg &&\r\n//             msg.map(({ sender, msg }, idx) => {\r\n//               if (sender !== currentUser) {\r\n//                 return (\r\n//                   <Message key={idx}>\r\n//                     <strong>{sender}</strong>\r\n//                     <p>{msg}</p>\r\n//                   </Message>\r\n//                 );\r\n//               } else {\r\n//                 return (\r\n//                   <UserMessage key={idx}>\r\n//                     <strong>{sender}</strong>\r\n//                     <p>{msg}</p>\r\n//                   </UserMessage>\r\n//                 );\r\n//               }\r\n//             })}\r\n//           <div style={{ float: 'left', clear: 'both' }} ref={messagesEndRef} />\r\n//         </MessageList>\r\n//         {/* {displayEmoji ? <Emoji /> : null}\r\n//         {console.log(localStorage.getItem('Emoji'))} */}\r\n//         {/* <Emoji display={displayEmoji} /> */}\r\n//       </ChatArea>\r\n//       {/* <BottomInput\r\n//             ref={inputRef}\r\n//             onKeyUp={sendMessage}\r\n//             placeholder=\"Enter your message\"\r\n//           /> */}\r\n//       <form class=\"form-inline\">\r\n//         <div class=\"input-group mb-2 mr-sm-2\">\r\n//           <div class=\"input-group-prepend\">\r\n//             <img className='input-group-text text-dark' style={{ width: '45px', height: '45px' }} src={emoji} alt={''}></img>\r\n//           </div>\r\n//           <input type=\"text\" class=\"form-control\" id=\"inlineFormInputGroupUsername2\" placeholder=\"Enter your message\" onKeyUp={sendMessage} ref={inputRef}></input>\r\n//           <div class=\"input-group-prepend\">\r\n//             <img className='input-group-text' style={{ width: '45px', height: '45px' }} src={file} alt={''}></img>\r\n//           </div>\r\n//           <div class=\"input-group-prepend\">\r\n//             <input type='file' onKeyUp={sendMessage} ref={inputRef} />\r\n//           </div>\r\n//         </div>\r\n//       </form>\r\n//     </ChatContainer>\r\n//   );\r\n// };\r\n\r\n// const ChatContainer = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   margin-right: 2%; \r\n//   margin-top: 10%;\r\n//   margin-bottom: 0%;\r\n//   width: 25%;\r\n//   height: 500px;\r\n//   background-color: white;\r\n//   // transition: all 0.5s ease;\r\n//   overflow: hidden;\r\n//   position:fixed;\r\n//   right:0;\r\n//   border-radius:2%;\r\n// `;\r\n\r\n// const TopHeader = styled.div`\r\n//   width: 100%;\r\n//   padding:10px;\r\n//   // margin-top: 3%;\r\n//   font-weight: 600;\r\n//   font-size: 20px;\r\n//   color: white;\r\n//   background:#22b1ed;\r\n// `;\r\n\r\n// const ChatArea = styled.div`\r\n//   width: 100%;\r\n//   height: 83%;\r\n//   max-height: 83%;\r\n//   overflow-x: hidden;\r\n//   overflow-y: auto;\r\n// `;\r\n\r\n// const MessageList = styled.div`\r\n//   display: flex;\r\n//   width: 100%;\r\n//   flex-direction: column;\r\n//   padding: 15px;\r\n//   color: #454552;\r\n// `;\r\n\r\n// const Message = styled.div`\r\n//   width: 100%;\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   align-items: flex-start;\r\n//   font-size: 16px;\r\n//   margin-top: 15px;\r\n//   margin-left: 15px;\r\n//   text-align: left;\r\n//   > strong {\r\n//     margin-left: 0px;\r\n//   }\r\n//   > p {\r\n//     max-width: 65%;\r\n//     margin-left: -5px;\r\n//     width: auto;\r\n//     padding: 9px;\r\n//     margin-top: 3px;\r\n//     border: 1px solid rgb(78, 161, 211, 0.3);\r\n//     border-radius: 15px;\r\n//     box-shadow: 0px 0px 3px #4ea1d3;\r\n//     text-align :right;\r\n//     font-size: 14px;\r\n//   }\r\n// `;\r\n\r\n// const UserMessage = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   align-items: flex-end;\r\n//   width: 100%;\r\n//   font-size: 16px;\r\n//   margin-top: 15px;\r\n//   text-align: right;\r\n//   margin-right: 0%;\r\n//   > strong {\r\n//     margin-right: 0px;\r\n//   }\r\n//   > p {\r\n//     max-width: 65%;\r\n//     width: auto;\r\n//     padding: 9px;\r\n//     margin-top: 3px;\r\n//     margin-right: 0px;\r\n//     border: 1px solid rgb(78, 161, 211, 0.3);\r\n//     border-radius: 15px;\r\n//     background-color: #22b1ed;\r\n//     color: white;\r\n//     font-size: 14px;\r\n//     text-align: left;\r\n//   }\r\n// `;\r\n\r\n// // const BottomInput = styled.input`\r\n// //   bottom: 0;\r\n// //   width: 100%;\r\n// //   height: 8%;\r\n// //   padding: 15px;\r\n// //   border-top: 1px solid rgb(69, 69, 82, 0.25);\r\n// //   box-sizing: border-box;\r\n// //   opacity: 0.7;\r\n\r\n// //   :focus {\r\n// //     outline: none;\r\n// //   }\r\n// // `;\r\n\r\n\r\n// export default Chat;\r\n// import React, { useEffect, useState, useRef } from 'react';\r\n// import styled from 'styled-components';\r\n// import socket from '../../socket';\r\n\r\n// const Chat = ({ display, roomId }) => {\r\n//   const currentUser = sessionStorage.getItem('user');\r\n//   const [msg, setMsg] = useState([]);\r\n//   const messagesEndRef = useRef(null);\r\n//   const inputRef = useRef();\r\n  \r\n//   useEffect(() => {\r\n//     socket.on('FE-receive-message', ({ msg, sender }) => {\r\n//       setMsg((msgs) => [...msgs, { sender, msg }]);\r\n//     });\r\n//   }, []);\r\n\r\n \r\n//   useEffect(() => {scrollToBottom()}, [msg])\r\n\r\n//   const scrollToBottom = () => {\r\n//     messagesEndRef.current.scrollIntoView({ behavior: 'smooth'});\r\n//   }\r\n\r\n//   const sendMessage = (e) => {\r\n//     if (e.key === 'Enter') {\r\n//       const msg = e.target.value;\r\n\r\n//       if (msg) {\r\n//         socket.emit('BE-send-message', { roomId, msg, sender: currentUser });\r\n//         inputRef.current.value = '';\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <ChatContainer className={display ? '' : 'width0'}>\r\n//       <TopHeader>Group Chat Room</TopHeader>\r\n//       <ChatArea>\r\n//         <MessageList>\r\n//           {msg &&\r\n//             msg.map(({ sender, msg }, idx) => {\r\n//               if (sender !== currentUser) {\r\n//                 return (\r\n//                   <Message key={idx}>\r\n//                     <strong>{sender}</strong>\r\n//                     <p>{msg}</p>\r\n//                   </Message>\r\n//                 );\r\n//               } else {\r\n//                 return (\r\n//                   <UserMessage key={idx}>\r\n//                     <strong>{sender}</strong>\r\n//                     <p>{msg}</p>\r\n//                   </UserMessage>\r\n//                 );\r\n//               }\r\n//             })}\r\n//             <div style={{float:'left', clear: 'both'}} ref={messagesEndRef} />\r\n//         </MessageList>\r\n//       </ChatArea>\r\n//       <BottomInput\r\n//         ref={inputRef}\r\n//         onKeyUp={sendMessage}\r\n//         placeholder=\"Enter your message\"\r\n//       />\r\n//     </ChatContainer>\r\n//   );\r\n// };\r\n\r\n// const ChatContainer = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   width: 25%;\r\n//   hieght: 100%;\r\n//   background-color: white;\r\n//   transition: all 0.5s ease;\r\n//   overflow: hidden;\r\n// `;\r\n\r\n// const TopHeader = styled.div`\r\n//   width: 100%;\r\n//   margin-top: 15px;\r\n//   font-weight: 600;\r\n//   font-size: 20px;\r\n//   color: black;\r\n// `;\r\n\r\n// const ChatArea = styled.div`\r\n//   width: 100%;\r\n//   height: 83%;\r\n//   max-height: 83%;\r\n//   overflow-x: hidden;\r\n//   overflow-y: auto;\r\n// `;\r\n\r\n// const MessageList = styled.div`\r\n//   display: flex;\r\n//   width: 100%;\r\n//   flex-direction: column;\r\n//   padding: 15px;\r\n//   color: #454552;\r\n// `;\r\n\r\n// const Message = styled.div`\r\n//   width: 100%;\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   align-items: flex-start;\r\n//   font-size: 16px;\r\n//   margin-top: 15px;\r\n//   margin-left: 15px;\r\n//   text-align: left;\r\n//   > strong {\r\n//     margin-left: 3px;\r\n//   }\r\n//   > p {\r\n//     max-width: 65%;\r\n//     width: auto;\r\n//     padding: 9px;\r\n//     margin-top: 3px;\r\n//     border: 1px solid rgb(78, 161, 211, 0.3);\r\n//     border-radius: 15px;\r\n//     box-shadow: 0px 0px 3px #4ea1d3;\r\n//     font-size: 14px;\r\n//   }\r\n// `;\r\n\r\n// const UserMessage = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   align-items: flex-end;\r\n//   width: 100%;\r\n//   font-size: 16px;\r\n//   margin-top: 15px;\r\n//   text-align: right;\r\n//   > strong {\r\n//     margin-right: 35px;\r\n//   }\r\n//   > p {\r\n//     max-width: 65%;\r\n//     width: auto;\r\n//     padding: 9px;\r\n//     margin-top: 3px;\r\n//     margin-right: 30px;\r\n//     border: 1px solid rgb(78, 161, 211, 0.3);\r\n//     border-radius: 15px;\r\n//     background-color: #4ea1d3;\r\n//     color: white;\r\n//     font-size: 14px;\r\n//     text-align: left;\r\n//   }\r\n// `;\r\n\r\n// const BottomInput = styled.input`\r\n//   bottom: 0;\r\n//   width: 100%;\r\n//   height: 8%;\r\n//   padding: 15px;\r\n//   border-top: 1px solid rgb(69, 69, 82, 0.25);\r\n//   box-sizing: border-box;\r\n//   opacity: 0.7;\r\n//   :focus {\r\n//     outline: none;\r\n//   }\r\n// `;\r\n\r\n// export default Chat;"]},"metadata":{},"sourceType":"module"}